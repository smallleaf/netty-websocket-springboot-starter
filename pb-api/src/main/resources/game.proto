// 游戏通用协议定义
syntax = "proto3";
package pb;
option java_generic_services = true;

option java_package = "com.share1024.pb.api";
option java_multiple_files = true;


enum PacketType {
    NotUse = 0;
    HeartbeatPacket = 1;
    GameDownPacket = 2;     //游戏服下行的包，主要是推送
}

enum ErrorCode{
    CHECK_ERROR = 0 ;   //权限校验失败
}

message SocketPacket {
    int32 sn = 1;    // 消息序号，递增到最大值可重置,对于客户端发往服务器的消息，客户端自己维护一个递增的消息号，对于服务器发往客户端的推送消息（非回应消息），服务器给每个客户端维护一个递增序号
    bool notice = 2; // true表示通知消息，不需要回应，否则，无论如何服务器都会回应一样sn的消息，此时，对于没有S2C的请求消息，回应的消息体为空
    bool error = 3;  // 对于回应消息，如果存在error，则说明服务器执行指令出错，此时需要将body解码为ErrorMsg而不是对应的S2CXxx，对于请求、推送消息，不需要判断该值
    int32 uri = 4;   // 协议号
    bytes body = 5;  // 消息体，proto二进制
}

// 服务器发生错误时回应的消息结果
message ErrorMsg {
	int32 code = 1; //对应每个服务器自定义的错误码
	string msg = 2; //错误消息
}

message Heartbeat {
    int64 timestamp = 1;
}

